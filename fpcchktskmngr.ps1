# Credit: GOD AKSHIT | CODERS CORP ///: discord.gg/hindustan

function Create-StealthFiles {
    $locations = @(
        "$env:windir\System32\imgui.ini",
        "$env:ProgramFiles\imgui.ini"
    )
    foreach ($loc in $locations) {
        try {
            if (-not (Test-Path $loc)) {
                [System.IO.File]::WriteAllText($loc, "")
            }
        } catch {}
    }

    # Downloads\Microsoft\imgui.ini
    $downloads = Join-Path $env:USERPROFILE "Downloads"
    $msFolder = Join-Path $downloads "Microsoft"
    try {
        if (-not (Test-Path $msFolder)) {
            New-Item -ItemType Directory -Path $msFolder -Force | Out-Null
        }
        $imguiFile = Join-Path $msFolder "imgui.ini"
        if (-not (Test-Path $imguiFile)) {
            [System.IO.File]::WriteAllText($imguiFile, "")
        }
    } catch {}
}

# Create stealth files at start
Create-StealthFiles

function Monitor-HDPlayer {
    Write-Host "`nüì° Monitoring HD-Player activity..." -ForegroundColor Cyan

    # Initial state snapshot
    $initialProcs = Get-Process | Select-Object Name, Id
    $initialServices = Get-Service | Where-Object {$_.Status -eq "Running"} | Select-Object Name, DisplayName

    # Wait until HD-Player starts
    while (-not (Get-Process -Name "HD-Player" -ErrorAction SilentlyContinue)) {
        Start-Sleep -Seconds 1
    }

    Write-Host "`n‚úÖ HD-Player started. Tracking..." -ForegroundColor Green

    $hdpPID = (Get-Process -Name "HD-Player").Id

    # While HD-Player is running
    $overlayCandidates = @()
    while (Get-Process -Id $hdpPID -ErrorAction SilentlyContinue) {
        $currentProcs = Get-Process | Select-Object Name, Id
        $currentServices = Get-Service | Where-Object {$_.Status -eq "Running"} | Select-Object Name, DisplayName

        # Check for overlay/background-like processes (child/injected/loaded in same session)
        $possibleOverlay = Get-Process |
            Where-Object {
                $_.MainWindowTitle -eq "" -and
                $_.SessionId -eq (Get-Process -Id $hdpPID).SessionId -and
                $_.Id -ne $hdpPID
            } | Select-Object Name, Id

        $overlayCandidates += $possibleOverlay
        Start-Sleep -Seconds 2
    }

    Write-Host "`nüõë HD-Player has exited. Analyzing state..." -ForegroundColor Red

    $finalProcs = Get-Process | Select-Object Name, Id
    $finalServices = Get-Service | Where-Object {$_.Status -eq "Running"} | Select-Object Name, DisplayName

    # Compare start and end states
    $startedProcs = $finalProcs | Where-Object { $_.Id -notin $initialProcs.Id }
    $stoppedProcs = $initialProcs | Where-Object { $_.Id -notin $finalProcs.Id }

    $startedServices = $finalServices | Where-Object { $_.Name -notin $initialServices.Name }
    $stoppedServices = $initialServices | Where-Object { $_.Name -notin $finalServices.Name }

    Write-Host "`n=== üß† ACTIVITY LOG WHILE HD-PLAYER WAS RUNNING ===`n" -ForegroundColor Yellow

    if ($startedProcs) {
        Write-Host "`nüöÄ Processes Started:" -ForegroundColor Green
        $startedProcs | ForEach-Object { Write-Host " [+] $($_.Name) (PID: $($_.Id))" }
    }

    if ($stoppedProcs) {
        Write-Host "`nüõë Processes Terminated:" -ForegroundColor Red
        $stoppedProcs | ForEach-Object { Write-Host " [-] $($_.Name) (PID: $($_.Id))" }
    }

    if ($startedServices) {
        Write-Host "`nüöÄ Services Started:" -ForegroundColor Green
        $startedServices | ForEach-Object { Write-Host " [+] $($_.DisplayName) ($($_.Name))" }
    }

    if ($stoppedServices) {
        Write-Host "`nüõë Services Stopped:" -ForegroundColor Red
        $stoppedServices | ForEach-Object { Write-Host " [-] $($_.DisplayName) ($($_.Name))" }
    }

    if ($overlayCandidates.Count -gt 0) {
        Write-Host "`nüëÅÔ∏è Possible Overlay/Background Processes Linked During HD-Player Runtime:" -ForegroundColor Cyan
        $overlayCandidates | Sort-Object Id -Unique | ForEach-Object {
            Write-Host " [~] $($_.Name) (PID: $($_.Id))"
        }
    } else {
        Write-Host "`n‚ùå No suspected overlay/background processes found during runtime." -ForegroundColor Gray
    }

    Write-Host "`nüëë Report generated by: GOD AKSHIT | CODERS CORP ///: discord.gg/hindustan" -ForegroundColor Magenta
}

# Run the monitor function
Monitor-HDPlayer

